# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# CI name
name: OWO

# events which can trigger action 
on: push # when push commit
    # branches: [ main ] # specify the main branch

jobs:
  Compile: # job build
    runs-on: ubuntu-latest # The type of machine to run the job on
    steps: # a sequence of tasks
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Generate class
      run: ./gradlew classes
    - uses: actions/cache@v2 # build cache
      name: Cache dependencies
      with:
        path: .gradle
        key: cache-dependencies

  Test: # job test
    runs-on: ubuntu-latest
    needs: [ build ] # dependency of job, i.e. run after build done
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - uses: actions/cache@v2 # build cache
      name: Cache dependencies
      with:
        path: .gradle
        key: cache-dependencies
    - name: Generate test report
      run: ./gradlew test
    - uses: actions/upload-artifact@v2
      name: Upload test report
      with:
        name: testReport
        path: build/reports/tests/test

  Assemble: # job assemble
    runs-on: ubuntu-latest
    needs: [ test ]
    outputs:
      jar_filename: ${{ steps.get_filename.outputs.filename }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - uses: actions/cache@v2 # build cache
      name: Cache dependencies
      with:
        path: .gradle
        key: cache-dependencies
    - name: Assemble the Gradle
      run: ./gradlew assemble
    - id: get_filename
      run: |
        echo ::set-output name=filename::st_nycu_lab4-$(cat build.gradle | grep -E "version" | sed 's/version[ \t\n]*//g' | tr -d \').jar"
    - uses: actions/upload-artifact@v2
      name: Upload jar file
      with:
        name: buildJar
        path: build/libs/st_nycu_lab4-1.0-SNAPSHOT.jar

  Release:
    runs-on: ubuntu-latest
    needs: [ assemble ]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Download jar file
      with:
        name: buildJar
    - name: change name
      run: mv buildJar ${{ steps.get_filename.outputs.filename }}
    - name: release jar file
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.get_filename.outputs.filename }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
