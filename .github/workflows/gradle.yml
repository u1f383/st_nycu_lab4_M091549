# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# CI name
name: OWO

# events which can trigger action 
on:
  push: # when push commit
    branches: [ main ] # specify the main branch
  release: # when push a tag commit
    branches: [ main ]

jobs:
  build: # job build
    runs-on: ubuntu-latest # The type of machine to run the job on
    steps: # a sequence of tasks
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - uses: actions/cache@v2
      name: Cache test report
      with:
        path: build/reports/tests/test # build cache
        key: test-report

  test: # job test
    runs-on: ubuntu-latest
    needs: [ build ] # dependency of job, i.e. run after build done
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      name: Get test report cache
      with:
        path: build/reports/tests/test
        key: test-report

    - name: Upload test report 
      uses: actions/upload-artifact@v2
      with:
        name: testReport
        path: build/reports/tests/test

  assemble: # job assemble
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Create jar file
      run: ./gradlew jar
    - name: Upload jar file
      uses: actions/upload-artifact@v2
      with:
        name: buildJar
        path: build/libs/OWO.jar

  # release_jar:
  #   runs-on: ubuntu-latest
